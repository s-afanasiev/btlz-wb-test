//@ts-nocheck
class TariffOperation {
    constructor(){}

    init(wbAPI, pgService, googleService){
        this.wbAPI = wbAPI;
        this.pgService = pgService;
        this.googleService = googleService;
        return this;
    }
    
    async run(desired_date){
        try {
            // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
            const wbData = await this.wbAPI.fetchBoxTariffs(desired_date);
            const pgResult = await this.pgService.saveWbDataToDBBatch(wbData);
            console.log(`–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ ${pgResult.isUpdate ? '–æ–±–Ω–æ–≤–ª–µ–Ω—ã' : '—Å–æ–∑–¥–∞–Ω—ã'}, ID –∑–∞–ø—Ä–æ—Å–∞:`, pgResult.tariffRequestId);

            //@ googleResult = [{tariff_request_id, warehouse_id, box_delivery_base}, {...}]
            const googlePgFormat = await this.pgService.getViewForGoogleSheets();
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
            const googleTableFormat = this.convertToGoogleSheetsFormat(googlePgFormat);
            // console.log('Values:', googleTableFormat.values);
            // console.log('Range:', googleTableFormat.range);
            this.googleService.write_wb_data(googleTableFormat.values, googleTableFormat.range);
            
            // console.log('\nüìä –ü–æ–ª—É—á–µ–Ω—ã —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è —Å–∫–ª–∞–¥–æ–≤:');
            // tariffs.forEach(tariff => {
            // console.log(`- ${tariff.warehouseName}: –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç ${tariff.boxDeliveryBase}‚ÇΩ`);
            // });

        } catch (error) {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Google Sheets
    convertToGoogleSheetsFormat(data) {
        if (!data || data.length === 0) {
            return { values: [], range: 'stocks_coefs!A1:A1' };
        }
        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ –∫–ª—é—á–µ–π –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        const headers = Object.keys(data[0]);
        // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ values —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
        const values = [headers];
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É
        data.forEach(item => {
            const row = headers.map(header => {
                const value = item[header];
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º null/undefined –∑–Ω–∞—á–µ–Ω–∏—è
                return value === null || value === undefined ? '' : String(value);
            });
            values.push(row);
        });
        // –í—ã—á–∏—Å–ª—è–µ–º range –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–º–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
        const numColumns = headers.length;
        const numRows = values.length;
        const lastColumn = String.fromCharCode(65 + numColumns - 1); // A=65, B=66, etc.
        const range = `stocks_coefs!A1:${lastColumn}${numRows}`;
        return { values, range };
    }
}

export default TariffOperation;